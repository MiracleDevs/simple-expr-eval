/*
 * Simple expression parser and evaluator
 * https://github.com/MiracleDevs/simple-expr-eval
 * 
 * Copyright (c) 2018 Miracle Devs
 * Use, reproduction, distribution, and modification of this code is subject to the terms and
 * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php
 */
!function(t){var s={Unknown:"Unknown",Integer:"Integer",String:"String",Bool:"Bool",Null:"Null",Variable:"Variable",Equals:"Equals",NotEquals:"NotEquals",Lt:"Lt",Lte:"Lte",Gt:"Gt",Gte:"Gte",And:"And",Or:"Or"};function i(t,e){if(!s[e])throw new Error("Token "+e+" is not defined");this.value=t,this.type=e}function n(t,e,r){this.operator=t,this.left=e,this.right=r}function f(t,e,r){n.call(this,t,e,r)}function p(t,e,r){n.call(this,t,e,r)}function h(t,e,r){n.call(this,t,e,r)}function g(t,e,r){n.call(this,t,e,r)}function o(t){this.value=t}function v(t){o.call(this,t)}function w(t){o.call(this,t)}function r(t){var e,r=0;function n(){return r<t.length}function o(){return t[r]}function l(){return t[r++]}function u(){var t=i();return n()&&o().type==s.And?new p(l(),t,i()):t}function i(){var t=a();return!n()||o().type!=s.Equals&&o().type!=s.NotEquals?t:new h(l(),t,a())}function a(){var t=c();if(!n())return t;var e=o();return e.type==s.Gt||e.type==s.Gte||e.type==s.Lt||e.type==s.Lte?new g(l(),t,c()):t}function c(){var t=l();if(t.type==s.Integer||t.type==s.String||t.type==s.Bool||t.type==s.Null)return new w(t);if(t.type==s.Variable)return new v(t);throw new Error("Unexpected token "+t.Value)}return e=u(),n()&&o().type==s.Or?new f(l(),e,u()):e}(f.prototype=Object.create(n.prototype)).constructor=f,(p.prototype=Object.create(n.prototype)).constructor=p,(h.prototype=Object.create(n.prototype)).constructor=h,(g.prototype=Object.create(n.prototype)).constructor=g,(v.prototype=Object.create(o.prototype)).constructor=v,(w.prototype=Object.create(o.prototype)).constructor=w,t.simpleExprEval=function(t,e){return function r(t,e){if(e=e||{},t instanceof n)return function(t,e){switch(t.operator.type){case s.Equals:return r(t.left,e)===r(t.right,e);case s.NotEquals:return r(t.left,e)!==r(t.right,e);case s.Lt:return r(t.left,e)<r(t.right,e);case s.Lte:return r(t.left,e)<=r(t.right,e);case s.Gt:return r(t.left,e)>r(t.right,e);case s.Gte:return r(t.left,e)>=r(t.right,e);case s.And:return!1!==r(t.left,e)&&r(t.right,e);case s.Or:return!0===r(t.left,e)||r(t.right,e)}throw new Error(t.toString())}(t,e);if(t instanceof o)return function(t,e){switch(t.value.type){case s.Integer:return parseInt(t.value.value);case s.String:return t.value.value;case s.Bool:if("true"===t.value.value)return!0;if("false"===t.value.value)return!1;throw new Error("Invalid boolean value: "+t.value.value);case s.Null:return null;case s.Variable:var r=e[t.value.value.substr(1)];return void 0===r?null:r}throw new Error(t.toString())}(t,e);throw new Error((node,node.toString()))}(r(function(t){for(var e=[],r=0;r<t.length;r++)if(""!=t[r].trim()){var n=s.Unknown,o="";if(/^\d+$/.test(t[r]))for(n=s.Integer,o+=t[r];r+1<t.length&&/^\d+$/.test(t[r+1]);)o+=t[++r];else if("'"===t[r]||'"'===t[r]){var l=t[r];for(n=s.String;r+1<t.length&&t[r+1]!=l;)o+=t[++r];r++}else if("$"==t[r])for(n=s.Variable,o+="$";r+1<t.length&&/[a-zA-Z0-9_]/.test(t[r+1]);)o+=t[++r];else if("!"==t[r]&&r+1<t.length&&"="==t[r+1])n=s.NotEquals,o="!=",r++;else if("="==t[r]&&r+1<t.length&&"="==t[r+1])n=s.Equals,o="==",r++;else if("<"==t[r])r+1<t.length&&"="==t[r+1]?(n=s.Lte,o="<=",r++):(n=s.Lt,o="<");else if(">"==t[r])r+1<t.length&&"="==t[r+1]?(n=s.Gte,o=">=",r++):(n=s.Gt,o=">");else if("&"==t[r]&&r+1<t.length&&"&"==t[r+1])n=s.And,o="&&",r++;else if("|"==t[r]&&r+1<t.length&&"|"==t[r+1])n=s.Or,o="||",r++;else for(var u=t[r];r+1<t.length;){if("true"==(u+=t[++r])||"false"==u){n=s.Bool,o=u;break}if("null"==u){n=s.Null,o="null";break}}if(n==s.Unknown)throw new Error("Unknown token "+o);e.push(new i(o,n))}return e}(t)),e)}}(this);